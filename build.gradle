buildscript {
    repositories {
        mavenCentral() { metadataSources { mavenPom(); ignoreGradleMetadataRedirection() } }
        gradlePluginPortal() { metadataSources { mavenPom(); ignoreGradleMetadataRedirection() } }
    }
    dependencies {
        classpath 'gradle.plugin.org.inferred:gradle-processors:3.7.0'
    }
}

plugins {
    id 'com.gradle.plugin-publish' version '0.21.0'
    id 'java-gradle-plugin'
    id 'groovy'
}

group 'ai.storktech.gradle.gitversion'
version System.env.CIRCLE_TAG ?: "4.0.0"

repositories {
    mavenCentral() { metadataSources { mavenPom(); ignoreGradleMetadataRedirection() } }
}

sourceSets {
    groovy
    main.output.dir groovy.output
}

dependencies {
    implementation gradleApi()
    implementation libs.guava

    groovyImplementation localGroovy()
    groovyImplementation gradleApi()

    // Access code written in groovy from src/main/java sources
    implementation sourceSets.groovy.output

    annotationProcessor libs.immutables.value
    compileOnly libs.immutables.value

    testImplementation gradleTestKit()
    testImplementation libs.junit.jupiter
    testImplementation libs.junit4
    testRuntimeOnly libs.junit.vintage
    testImplementation libs.assertj.core
    testImplementation libs.spock.core
    testImplementation libs.jackson
}

java {
    sourceCompatibility JavaVersion.VERSION_1_8
}

tasks.withType(JavaCompile) {
    options.compilerArgs += ['-Werror', '-Xlint:deprecation']
}

gradlePlugin {
    plugins {
        create("gitVersionPlugin") {
            id = "io.stork.gradle-git-version"
            implementationClass = "com.palantir.gradle.gitversion.GitVersionPlugin"
        }
    }
}

// Configure the publishPlugins task
publishPlugins.onlyIf { System.env.CIRCLE_TAG }
project.ext.'gradle.publish.key' = System.env["GRADLE_KEY"]
project.ext.'gradle.publish.secret' = System.env["GRADLE_SECRET"]
